//
// Created by 沈航可 on 2019-08-22.
//

/*
 * 什么是栈
 * 栈也是一种线性表，但是这种结构，只能在线性表的一头进行操作
 *
 *
 * node->node->node->....
 *
 * 通常情况下，栈有两种操作，第一种叫做压栈（push）,另外一种，叫做弹栈（pop）
 * push 操作实际上就是往栈顶加入元素，
 * pop 操作实际上就是把栈顶的元素弹出来
 *
 *
 * 栈的实现方式：
 * 1。顺序结构
 * 2。链式结构
 *
 * 先进后出
 *
 * 共享栈
 *
| 5 |
| 4 |
| 3 |  <-top_1
| 2 |  <-top_2
| 1 |

 *
 *
 *
 * 链栈，使用链表的方式，来进行构造
 *
 * Node_1->node_2->node_3
 *
 * 新增加一个top指针，指向头节点（假如，我们是要在这个链表的头部进行操作的情况）
 *
 *    top
 *     |
 * new_node->node_2->node_3
 * 要插入节点叫做
 *
 * 1.pop
 * 首先，将top指针，指向node_1的next指针指向的节点
 * 然后node_1删掉（释放掉）
 *
 * 2。push 操作
 * 首先，将要插入的新节点的next指针，指向top指针指向的节点
 * 然后，将top指针指向新节点
 * */


/*
 *
 *
 *
 *
| 5 |<-top_2
| 4 |
| 3 |
| 2 |
| 1 |
| 5 |<-top_1
| 4 |
| 3 |
| 2 |
| 1 |



|  4  |
| 10 |
| 3  |
| 2  |
| 1  |
---

*/

//要把1，2，3，4，5放到这个杯子里面，加入，我要把10，放到3的后面


/*
 *
 *
| 0 |
| 0 |
| 0 |<-top_1
| 0 |<-top_2
| 0 |
 *
 *
 * 如果我要把1拿出来，要怎么做
 *   5，4，3，2，1
 *
 *   所谓的pop，就是把杯头的元素，拿出来
 *
 *   所谓的push ，就是把一个元素放到栈顶
 *
 *
 * */

//顺序结构的压栈pop


int a[5] = {0, 0, 0, 0, 0};
int top_1 = 0; //指向栈顶的元素
int top_2 = 4;

/*
 *
 *
0|  |
1|  |
2|  |
3|  |  <-top
4| www.baidu.com |
  ---

  www.google.com
  www.chuan.com
 *
 * 现在我要把8放到这个栈中
 * */

int pop_1() {
    int result = a[top_1];
    a[top_1] = 0;
    top_1--;
    return result;
}

void push(int value) {
    if (top_1 + 1 == top_2) {
        printf("the stack full");
        return;
    }
    top_1++;
    a[value] = 10;
}

int pop_2() {
    int result = a[top_2];
    a[top_2] = 0;
    top_2++;
    return result;
}

void push_2(int value) {
    if (top_1 + 1 == top_2) {
        printf("the stack full");
        return;
    }
    top_2--;
    a[value] = 10;
}

/*
 * 假如说我现在栈中的元素是1，2，3，4，5，1是栈顶元素
 * 现在我要把4弹出来，然后放入8，9，然后再弹出9 ，接着放进1，3
 * 问现在栈中的元素顺序是什么？（从栈顶开始算） 3，1，8，5
 * 所有弹出元素的顺序（按弹出的先后顺序排序）
 *
 *
 *1，2，3，4，9
 *
 *
 * */






