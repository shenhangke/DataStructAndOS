//
// Created by 沈航可 on 2019-08-23.
//

/*
 * 特殊数组的存储，分为以下几种
 *
 * 对称数组（对称矩阵）
 *
 * 仅仅存储下三角的元素，其他元素就是对称的
 * 使用一维数组来进行存储
 * 存储时：a[i][j] 在一维数组 A[ ]中的下标就是该元素前面元素的个数：
 * k= i×(i+1)/2+ j
 *
 * */


/*
 *
 * 数组的本质其实就是矩阵
 * 如果我们有一个一维的数组，比如  【1，2，3，3，5】
 *
 * 如果我们有一个二纬数组，比如 arr[6][3]   arr[i][j]   当i=0，j=0的时候，arr[5][2]
 *
 *        1,2,3|      --element,这个元素是一个长度为3的数组 int ele[3]
 *        4,5,6|
 *        1,2,2|
 *        1,1,1,|
 *        3,5,6|
 *        1,2,6|
 *
 *        这个矩阵，就是一个6*3的矩阵
 *
 *
 *  特殊的矩阵
 *  1。对角矩阵
 *
 *  1，0, 0
 *  0, 1, 0
 *  0, 0, 1
 *
 *
 * 一般来说，这种矩阵都是存储在二维数组中的，由于这种矩阵的特殊性，我们可以把这种矩阵进行一些压缩
 * 假如说，我们要存储这种矩阵，我们需要用9个存储单元来进行存储
 *
 * 但是由于这种矩阵的特殊性，我们可以转化维用更少存储单元的一维数组进行存储
 *
 * i,j=k
 *
 * 我们要用一个一维的数据来进行表示，其中k就是这个一堆数组的下标，ij，分别是二维数据的行列表示
 *
 * int a[i]
 * a[0]=origin[0][0]
 *
 * a[1]=origin[1][1]
 *
 * 2.对称矩阵
 *
 * 1 2，3
 * 2 1  5
 * 3 5  1
 *
 *
 * k= i×(i+1)/2+ j
 *
 * 建立一个一一映射的关系，把二维数据的行列值，映射到一堆数组的下标
 *
 *
 *
 *
 *
 * */

int arr[6][3];


/*
0x0000001  1
0x0000002  2
0x0000003  3
0x0000004  4
...
*/

